setwd("brca_tcga_pan_can_atlas_2018.tar.gz") # change this to your own directory
file.exists("brca_tcga_pan_can_atlas_2018.tar.gz")
file_name = "brca_tcga_pan_can_atlas_2018.tar.gz"
untar(file_name)
setwd(paste(getwd() , "/brca_tcga_pan_can_atlas_2018", sep = ""))
clinical = read.delim("data_clinical_patient.txt")
rnaseq = read.delim("data_mrna_seq_v2_rsem.txt")
keep = !duplicated(rnaseq[,1])
rnaseq = rnaseq[keep,]
rownames(rnaseq)  = rnaseq[,1]
cna = read.delim('data_cna.txt')
erbb2_indx = which(cna[,1] == 'ERBB2')
hist(as.numeric(cna[erbb2_indx,-c(1,2)]))
rna_cna_id = which(is.element(colnames(rnaseq[,-c(1,2)]), colnames(cna[,-c(1,2)])))
rna_cna_sub = rnaseq[,2+rna_cna_id]
no_pats_in_rna_cna_sub_and_cna = sum(is.element(colnames(rnaseq[,2+rna_cna_id]), colnames(cna[,-c(1,2)]))) 
sanity_check = no_pats_in_rna_cna_sub_and_cna == dim(rna_cna_sub)[2]
meta_erbb2 = matrix(0,length(rna_cna_id),1)
for (i in 1:length(rna_cna_id)){
  col_i = colnames(rna_cna_sub)[i]
  col_cna = which(colnames(cna)==col_i)
  meta_erbb2[i,] = 1*(cna[erbb2_indx,col_cna]>0)
}
col_i = colnames(rna_cna_sub)[1]
col_cna = which(colnames(cna)==col_i)
(cna[erbb2_indx,col_cna]>0) == meta_erbb2[1,1]
pos_example = which(meta_erbb2==1)[1]
col_i = colnames(rna_cna_sub)[pos_example]
col_cna = which(colnames(cna)==col_i)
(cna[erbb2_indx,col_cna]>0) == meta_erbb2[pos_example,1]
colnames(meta_erbb2) = 'ERBB2Amp'
rna_cna_sub = round(rna_cna_sub)
library(DESeq2)
dds <- DESeqDataSetFromMatrix(countData = rna_cna_sub,
                              colData = DataFrame(meta_erbb2),
                              design = ~ ERBB2Amp)
dds <- DESeq(dds)
results <- results(dds)
top_genes <- head(results[order(results$padj), ], 10)
print(top_genes)
gene_symbols <- rownames(top_genes)
library(clusterProfiler)
enrich_result <- enrichKEGG(gene = gene_symbols, organism = 'hsa')
print(enrich_result)
vsd <- varianceStabilizingTransformation(dds)
pca_data <- plotPCA(vsd, intgroup = "ERBB2Amp", returnData = TRUE)
library(ggplot2)
ggplot(pca_data, aes(x = PC1, y = PC2, color = ERBB2Amp)) +
  geom_point() +
  ggtitle("PCA Plot")
library(Biobase)
vsd_matrix <- assay(vsd)
pca_result <- prcomp(t(vsd_matrix))
transformed_values <- assay(vsd)
hclust_result <- hclust(dist(t(transformed_values)), method = "ward.D2")
cut_tree_result <- cutree(hclust_result, k = 3)  # You can adjust the number of clusters (k)
pca_result <- prcomp(t(transformed_values))
cut_tree_result_factor <- as.factor(cut_tree_result)
library(ggplot2)
fviz_pca_ind(pca_result, col.ind = cut_tree_result_factor, 
             palette = c("yellow", "red", "blue"),
             addEllipses = TRUE) +
  geom_text(aes(label = rownames(pca_result$x), 
                color = cut_tree_result_factor), 
            size = 2) 
